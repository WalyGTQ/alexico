/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codigo;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Waly
 */
public class FrmPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form FrmPrincipal
     */
    public FrmPrincipal() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtEntrada = new javax.swing.JTextField();
        btnAnalizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        txtEntrada2 = new javax.swing.JTextField();
        btnAnalizar2 = new javax.swing.JButton();
        btnLimpiar2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtArea2 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ANALIZADOR LEXICO");

        txtEntrada.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        txtEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEntradaActionPerformed(evt);
            }
        });

        btnAnalizar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAnalizar.setText("Analizar");
        btnAnalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalizarActionPerformed(evt);
            }
        });

        txtArea.setColumns(20);
        txtArea.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtArea.setRows(5);
        jScrollPane1.setViewportView(txtArea);

        jButton1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton1.setText("Limpiar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnAnalizar2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnAnalizar2.setText("Analizar");
        btnAnalizar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalizar2ActionPerformed(evt);
            }
        });

        btnLimpiar2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnLimpiar2.setText("Limpiar");
        btnLimpiar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiar2ActionPerformed(evt);
            }
        });

        txtArea2.setColumns(20);
        txtArea2.setRows(5);
        jScrollPane2.setViewportView(txtArea2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAnalizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(19, 19, 19))
                    .addComponent(txtEntrada)
                    .addComponent(jScrollPane1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEntrada2, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAnalizar2)
                                .addGap(102, 102, 102)
                                .addComponent(btnLimpiar2))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtEntrada2)
                    .addComponent(txtEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAnalizar)
                    .addComponent(jButton1)
                    .addComponent(btnAnalizar2)
                    .addComponent(btnLimpiar2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalizarActionPerformed

        String str = txtEntrada.getText();
        Pattern pat = Pattern.compile("^M{0,3}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$");
        Matcher mat = pat.matcher(str);

        if (str.equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese Cadena Â¨Para Validar");
        } else {
            if (mat.matches()) {
                Matcher mat0 = pat.matcher(str);
                while (mat0.find()) {
                    txtArea.append("\n" + mat0.group() + "\tNumero Romano");
                }
            } else {
                txtArea.append("\n" + str + "\tNO es un Numero Romano");
            }

        }

//txtArea.setText("");
        /*File archivo = new File("archivo.txt");
        PrintWriter escribir;
        try {
            escribir = new PrintWriter(archivo);
            escribir.print(txtEntrada.getText());
            escribir.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            Reader lector = new BufferedReader(new FileReader("archivo.txt"));
            Lexer lexer = new Lexer(lector);
            String resultado = "";
            String cadena = "";
            while (true) {
                Tokens tokens = lexer.yylex();
                if (tokens == null) {
                    resultado += "\n-------FIN-------";
                    txtArea.setText("Lexema:\tComponente Lexico:\n\n"+resultado);
                    return;
                }
                switch (tokens) {
                    case ERROR:
                        resultado += ":\tSimbolo no Definido\n";
                        break;
                    case Romano:
                        resultado += lexer.lexeme +":\tNumero Romano Encontrado\n";
                        System.out.println("ROmano Encontrado xD");
                        break;

                    case Numero:
                    case Reservadas:
                        resultado += lexer.lexeme + "\tEs un " + tokens + "\n";
                        break;
                    default:
                        resultado += "Token:\t" + tokens + "\n";
                        break;
                }

            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
         */

    }//GEN-LAST:event_btnAnalizarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        txtArea.setText("");
        txtEntrada.setText("");

    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEntradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEntradaActionPerformed

    private void btnLimpiar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiar2ActionPerformed
        txtArea2.setText("");
        txtEntrada2.setText("");

    }//GEN-LAST:event_btnLimpiar2ActionPerformed

    private void btnAnalizar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalizar2ActionPerformed

        String str2 = txtEntrada2.getText();
        String str23 = "><";
        String str24 = "if IF If";

        if (str2.equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese Cadena Â¨Para Validar");
        } else {

            Pattern pat = Pattern.compile("^[a-zA-Z]{1}\\=(\\d+|[\\Q(\\E]-\\d+[\\Q)\\E])([\\/|\\*|\\+|\\-]{1}(\\d+|[\\Q(\\E]-\\d+[\\Q)\\E]))+$");
            Matcher mat = pat.matcher(str2);

            Pattern pattern = Pattern.compile("[a-zA-Z]");
            Pattern pattern0 = Pattern.compile("=");
            Pattern pattern1 = Pattern.compile("[\\/|//*|\\+|-]");
            Pattern pattern2 = Pattern.compile("[\\d]+|[-\\d]+");
            Pattern pattern3 = Pattern.compile("\\Q(\\E");
            Pattern pattern4 = Pattern.compile("\\Q)\\E");
            //--------------------------------------------Fin Exptesiones Normales
            Pattern pattern5 = Pattern.compile("\\Q.\\E|\\Q|\\E|\\Q<\\E|\\Q[\\E|\\Q{\\E|\\Q$\\E|\\Q!\\E|\\Q}\\E|\\Q]\\E|\\Q?\\E|\\Q>\\E");//
            Pattern pattern6 = Pattern.compile("if|else|while|for|switch|case|break|try|return|void|public|protected|private|class|abstract|this|IF|ELSE|WHILE|FOR|SWITCH|CASE|BREAK|TRY|RETURN|VOID|PUBLIC|PROTECTED|PRIVATE|CLASS|ABSTRACT|THIS|If|Else|While|For|Switch|Case|Break|Try|Return|Void|Public|Protected|Private|Class|Abstract|This");

            Matcher matcher = pattern.matcher(str2);
            Matcher matcher0 = pattern0.matcher(str2);
            Matcher matcher1 = pattern1.matcher(str2);
            Matcher matcher2 = pattern2.matcher(str2);
            Matcher matcher3 = pattern3.matcher(str2);
            Matcher matcher4 = pattern4.matcher(str2);
            //----------------------------------------------Fin Cadenas Normales
            Matcher matcher5 = pattern5.matcher(str2);
            Matcher matcher6 = pattern6.matcher(str2);

            while (matcher5.find()) {
                txtArea2.append("\n" + matcher5.group() + "\tMetadato!");
            }
            while (matcher6.find()) {
                txtArea2.append("\n" + matcher6.group() + "\tPalabra Reservada!\n");
            }

            if (mat.matches()) {
                Pattern patx = Pattern.compile("^[a-zA-Z]{1}\\=(\\d+|[\\Q(\\E]-\\d+[\\Q)\\E])([\\/|\\*|\\+|\\-]{1}(\\d+|[\\Q(\\E]-\\d+[\\Q)\\E]))+$");
                Pattern pattern7 = Pattern.compile("\\/0");
                Matcher mat2 = patx.matcher(str2);
                Matcher matcher7 = pattern7.matcher(str2);

                if (matcher7.find()) {
                    /* Pattern patx1 = Pattern.compile("^[a-zA-Z]{1}\\=(\\d+|[\\Q(\\E]-\\d+[\\Q)\\E])[[\\/|\\*|\\+|\\-]{1}(\\d+|[\\Q(\\E]-\\d+[\\Q)\\E])]+$"); 
               Matcher mat21 = patx1.matcher(str2); 
                txtArea2.append("La Cadena "+mat21.group()+" es Correcta pero Invalida");*/
                    while (mat2.find()) {
                        txtArea2.append("\n" + "La Cadena " + mat2.group() + " es Correcta pero Invalida\n");
                        txtArea2.append("\n" + "No se Puede Dividir por 0");
                        txtArea2.append("\n" + "Revise la Expresion\n");
                    }
                } else {
                    while (mat2.find()) {
                        txtArea2.append("\n" + mat2.group() + "\tLa ExpresiÃ³n es Correcta!\n");
                    }
                    while (matcher.find()) {
                        txtArea2.append("\n" + matcher.group() + "\tVariable Encontrada");
                        while (matcher0.find()) {
                            txtArea2.append("\n" + matcher0.group() + "\tSigno de Asignacion Encontrado");
                            while (matcher2.find()) {
                                txtArea2.append("\n" + matcher2.group() + "\tNumero Encontrado");
                                while (matcher1.find()) {
                                    txtArea2.append("\n" + matcher1.group() + "\tOperador Aritmetico Encontrado");
                                    break;
                                }
                            }
                        }
                    }
                    while (matcher3.find()) {
                        txtArea2.append("\n" + matcher3.group() + "\tInicio Agrupacion");
                    }

                    while (matcher4.find()) {
                        txtArea2.append("\n" + matcher4.group() + "\tFin  Agrupacion");
                    }
                }

            } else {

                txtArea2.append("\n" + "La Cadena: " + str2 + " Es Incorrecta o es Invalido");

            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnAnalizar2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnalizar;
    private javax.swing.JButton btnAnalizar2;
    private javax.swing.JButton btnLimpiar2;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtArea;
    private javax.swing.JTextArea txtArea2;
    private javax.swing.JTextField txtEntrada;
    private javax.swing.JTextField txtEntrada2;
    // End of variables declaration//GEN-END:variables
}
